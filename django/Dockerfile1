# docker run -t -d dcp-container-python-poc_django
# docker exec -it  bash
# https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/#project-setup

FROM centos/python-36-centos7

USER root
# run CentOS with systemd inside a Docker container
RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \
    systemd-tmpfiles-setup.service ] || rm -f $i; done); \
    rm -f /lib/systemd/system/multi-user.target.wants/*;\
    rm -f /etc/systemd/system/*.wants/*;\
    rm -f /lib/systemd/system/local-fs.target.wants/*; \
    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
    rm -f /lib/systemd/system/basic.target.wants/*;\
    rm -f /lib/systemd/system/anaconda.target.wants/*;

ENV DEBIAN_FRONTEND=noninteractive
RUN yum -y --enablerepo=extras install epel-release && yum clean all && yum -y update && \
    yum install -y \
    #apt-utils \
    #vim \
    #curl \
    #nano \
    httpd 

ENV APP_HOME=/django
COPY . $APP_HOME
WORKDIR $APP_HOME
RUN pip install -r requirements.txt
# FROM python:3.7-slim
# ENV DEBIAN_FRONTEND=noninteractive
# ENV APP_HOME=/django
# RUN apt-get update && apt-get install -y \
# 	# apt-utils \
# 	# vim \
# 	# curl \
# 	# apache2 \
# 	# apache2-utils \
# 	libpq-dev \
# 	python3-dev \
# 	gcc \
# 	libapache2-mod-wsgi-py3 \
# 	nano

# COPY . $APP_HOME
# WORKDIR $APP_HOME
# RUN pip install -r requirements.txt

#ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
CMD ["/usr/sbin/httpd","-D","FOREGROUND"]